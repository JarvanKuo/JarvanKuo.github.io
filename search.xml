<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo笔记]]></title>
    <url>%2F2019%2F09%2F18%2Fhexo%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[hexo的一些配置和命令 hexo 常用指令1234hexo new "post title with whitespace" // 新增md文章hexo clean // 清除hexo g // 生成静态文件。hexo g -d // 文件生成后立即部署网站 站内文章跳转通过内置的标签插件的语法post_link来实现引用 1&#123;% post_link 文章文件名（不要后缀） 文章标题（可选） %&#125; hexo安装请看 官网 NexT主题使用流行的NexT，NexT官网 默认主题插件扩展请看 个人网站的功能插件 评论插件-gitalk记录如何在hexo next主题下配置gitalk评论系统 修改内容区宽度NexT | 修改内容区域的宽度 添加文章阴影Hexo博客NexT主题下添加文章边框阴影效果 文章摘要设置站点首页不显示文章全文 修改配置文件_config.yml 12345# Automatically Excerpt. Not recommend.# Please use &lt;!-- more --&gt; in the post to control excerpt accurately.auto_excerpt: enable: false length: 150 注：使用&lt;!-- more --&gt;标志来精确控制文章的摘要预览，通常在文章开头写一下概要。]]></content>
      <categories>
        <category>建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[openresty配置]]></title>
    <url>%2F2019%2F09%2F17%2Fopenresty%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[openresty配置的一些问题总结！ 环境 win10下的linux子系统ubuntu（wsl） openresty版本：ngx_openresty-1.7.7.2.tar.gz wsl安装请移步 wsl笔记 openresty安装请参考安装OpenResty(Nginx+Lua)开发环境 或者参考 openresty安装笔记 openssl版本问题需要指定旧版本，推荐在编译 Nginx 时指定 OpenSSL 源码目录，而不是使用系统自带的版本，这样更可控。 参考openssl版本问题 Lua模块安装 安装 LuaRocks LuaRocks: Lua 的模块安装和部署工具 1apt-get install luarocks 安装 luasocket lua 远程调试引入的 require(&quot;mobdebug&quot;).start() 需要 socket 注：Lua 的 Remote Debug 远程调试 现在还搞不定，此处占个坑。 1luarocks install luasocket openresty使用nginx常用命令 启动： 指定配置文件 1nginx -p `pwd`/ -c conf/nginx.conf 停止： nginx指定配置文件的，停止时也需指定参数 1nginx -p `pwd`/ -c conf/nginx.conf -s quit]]></content>
      <categories>
        <category>分布式</category>
      </categories>
      <tags>
        <tag>openresty</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[openresty安装笔记]]></title>
    <url>%2F2019%2F09%2F17%2Fopenresty%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[openresty安装在ubuntu下的安装 参考 安装OpenResty(Nginx+Lua)开发环境 安装步骤：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162# 创建目录/usr/servers，以后我们把所有软件安装在此目录mkdir -p /usr/servers cd /usr/servers/ # 安装依赖apt-get install libreadline-dev libncurses5-dev libpcre3-dev libssl-dev perl # 下载ngx_openresty-1.7.7.2.tar.gz并解压wget http://openresty.org/download/ngx_openresty-1.7.7.2.tar.gz tar -xzvf ngx_openresty-1.7.7.2.tar.gz # 安装LuaJITcd /usr/servers/ngx_openresty-1.7.7.2/bundle/LuaJIT-2.1-20150120/ # 没有安装make的需要先安装 apt install make apt install make-guile # 没安装gcc的需要先执行以下命令 sudo apt-get build-dep gcc make clean &amp;&amp; make &amp;&amp; make install ln -sf luajit-2.1.0-alpha /usr/local/bin/luajit # 下载ngx_cache_purge模块，该模块用于清理nginx缓存cd /usr/servers/ngx_openresty-1.7.7.2/bundle wget https://github.com/FRiCKLE/ngx_cache_purge/archive/2.3.tar.gz tar -xvf 2.3.tar.gz # 下载nginx_upstream_check_module模块，该模块用于ustream健康检查cd /usr/servers/ngx_openresty-1.7.7.2/bundle wget https://github.com/yaoweibin/nginx_upstream_check_module/archive/v0.3.0.tar.gz tar -xvf v0.3.0.tar.gz # 安装ngx_openrestycd /usr/servers/ngx_openresty-1.7.7.2 ./configure --prefix=/usr/servers --with-http_realip_module --with-pcre --with-luajit --add-module=./bundle/ngx_cache_purge-2.3/ --add-module=./bundle/nginx_upstream_check_module-0.3.0/ -j2 # 报错 checking for zlib library ... not found，需要安装 zlib sudo apt-get install zlib1g-devmake &amp;&amp; make install # 报错 recipe for target 'objs/src/event/ngx_event_openssl.o' failed，openssl版本问题，需要安装旧版本 # 需要指定旧版本，推荐在编译 Nginx 时指定 OpenSSL 源码目录，而不是使用系统自带的版本，这样更可控 cd /usr/servers/ngx_openresty-1.7.7.2/bundle wget -O openssl.tar.gz -c https://github.com/openssl/openssl/archive/OpenSSL_1_0_2k.tar.gz tar zxf openssl.tar.gz mv openssl-OpenSSL_1_0_2k/ openssl # 重新配置 ngx_openresty cd /usr/servers/ngx_openresty-1.7.7.2 ./configure \ --prefix=/usr/servers \ --with-http_realip_module \ --with-pcre \ --with-luajit \ --add-module=./bundle/ngx_cache_purge-2.3/ \ --add-module=./bundle/nginx_upstream_check_module-0.3.0/ \ --with-openssl=./bundle/openssl \ -j2 # 重新make make &amp;&amp; make install # 启动nginx，访问 http://localhost/ 成功即可/usr/servers/nginx/sbin/nginx 拓展： ubuntu gcc 安装 使用 ubantu下安装zlib的方法 Nginx 配置之完整篇]]></content>
      <categories>
        <category>分布式</category>
      </categories>
      <tags>
        <tag>openresty</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nginx配置]]></title>
    <url>%2F2019%2F09%2F17%2Fnginx%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[nginx的命令，配置！ nginx常用命令 测试配置文件 1nginx -t 启动： 指定配置文件 1nginx -p `pwd`/ -c conf/nginx.conf 停止： nginx指定配置文件的，停止时也需指定参数 1nginx -p `pwd`/ -c conf/nginx.conf -s quit]]></content>
      <categories>
        <category>分布式</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[wsl笔记]]></title>
    <url>%2F2019%2F09%2F17%2Fwsl%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[wsl 下的 ubuntu 系统一些问题总结！ 环境win10 下 wsl 环境安装 ubuntu 修改更新源 备份文件 1sudo cp /etc/apt/sources.list /etc/apt/sources.list.old 使用阿里源 打开文件： 12 sudo vi /etc/apt/sources.list` 整个文件替换成阿里源： 12345678910deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse 更新 12sudo apt-get updatesudo apt-get upgrade 设置超级用户ubuntu的su初始密码设置 1sudo passwd zsh美化终端安装使用oh-my-zsh（Win10+WSL或Ubuntu） 设zsh为默认shell1chsh -s /bin/zsh # 设置 bash 同理 环境变量PATH使用zsh后，环境变量需要在 ~/.zshrc 配置文件中定义，/etc/profile 是不会生效的 开启 ssh 远程连接wsl下的ubuntu自带ssh服务有问题需要卸载重装一遍ssh服务 123456789101112# 重装 openssh-serversudo apt-get remove openssh-serversudo apt-get install openssh-server# 修改 shd_config文件sudo vi /etc/ssh/sshd_config# Port 22 #默认即可，如果有端口占用可以自己修改# PasswordAuthentication yes # 允许用户名密码方式登录# PermitRootLogin yes # 允许管理员ssh登录# 重启ssh服务sudo service ssh restart apt命令[Ubuntu的apt命令详解] 搜索软件 1sudo apt-cache search package_name windows 和 wsl 互相访问文件 打开wsl文件 使用explorer.exe，wsl下切换用户就不能使用这个命令。。。 1explorer.exe . 访问windows文件，使用挂载方式/mnt/ 1cd /mnt/c/Users/Ben/Documents/]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ant笔记]]></title>
    <url>%2F2018%2F09%2F17%2Fant%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[ant的使用，命令！ 参考文献： ant+maven一键打包springboot上传服务器发布 判断linux文件、文件夹是否存在 shell中脚本参数传递的两种方式 shell脚本“syntax error:unexpected end of file”解决方案 ant远程部署 Ant 引用配置文件 123456789&lt;!-- set global properties for this build --&gt; &lt;property file="build.properties"/&gt; &lt;!--输出配置信息--&gt; &lt;target name="show_property" description="show build.properties conf"&gt; &lt;echo&gt; ================== build.properties ================ &lt;/echo&gt; &lt;echo&gt;PROJECT_NAME=$&#123;ant.project.name&#125;&lt;/echo&gt; &lt;echo&gt;DEST_DIR=$&#123;DEST_DIR&#125;&lt;/echo&gt;&lt;/target&gt; target条件控制 12345678910&lt;target name="detect.file" &gt; &lt;condition property="fileIsExists" &gt; &lt;and&gt; &lt;available file="c:/123.txt"/&gt; &lt;/and&gt; &lt;/condition&gt;&lt;/target&gt;&lt;target name="echoDemo" if="fileIsExists" depends="detect.file"&gt; &lt;echo message="hello ant"/&gt;&lt;/target&gt; Ant-sshexec-执行远程服务器或本地脚本 需要先下载第三方依赖包jsch-0.1.46.jar到ant/lib目录 12345678&lt;sshexec host="$&#123;host&#125;"username="$&#123;usr&#125;" password="$&#123;pwd&#125;"trust="true" command="pwd;./test.sh" outputproperty="output" # sh 的输出，可用 $&#123;output&#125; 获取/&gt; scp命令上传文件 1234567&lt;scp todir="$&#123;USERNAME&#125;:$&#123;PASSWORD&#125;@$&#123;SERVER&#125;:$&#123;DEST_DIR&#125;" trust="true"&gt; &lt;fileset dir="$&#123;LOCAL_PATH&#125;"&gt; &lt;exclude name="build.properties"/&gt; &lt;exclude name="build.xml"/&gt; &lt;exclude name=".idea/"/&gt; &lt;/fileset&gt;&lt;/scp&gt; 判断远程文件是否存在 123456#判断文件是否存在if [ -f "/data/filename" ];then echo "文件存在" else echo "文件不存在"fi shell脚本传参 123456789101112#!/bin/bashecho "脚本$0"echo "第一个参数$1"echo "第二个参数$2"# 命令行输入$ ./test.sh 1 2#shell中将会输出：脚本./test.sh # $0获取到的是脚本路径以及脚本名# 后面按顺序获取参数，当参数超过10个时(包括10个)，需要使用$&#123;10&#125;,$&#123;11&#125;....才能获取到参数第一个参数1第二个参数2 shell脚本添加执行权限 chmod是权限管理命令change the permissions mode of a file的缩写。。 u代表所有者，x代表执行权限。 + 表示增加权限。 12chmod u+x file.sh # 就表示对当前目录下的file.sh文件的所有者增加可执行权限。 shell脚本“syntax error:unexpected end of file”解决方案 原因：该脚本在windows下编辑或者在windows打开保存过。 DOS下文件和Linux下文件格式差异问题导致的。 在 idea 中右下角可以选择 LF 为换行标识。 在 服务器可以使用vi修改文件格式，如下： 123vi dos.txt:set fileformat=unix:wq]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ant</tag>
      </tags>
  </entry>
</search>
