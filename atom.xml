<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JK的技术博客</title>
  
  <subtitle>技术博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://JarvanKuo.github.io/"/>
  <updated>2019-09-18T11:05:26.000Z</updated>
  <id>https://JarvanKuo.github.io/</id>
  
  <author>
    <name>Jarvan Kuo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo笔记</title>
    <link href="https://JarvanKuo.github.io/2019/09/18/hexo%E7%AC%94%E8%AE%B0/"/>
    <id>https://JarvanKuo.github.io/2019/09/18/hexo笔记/</id>
    <published>2019-09-18T05:14:40.000Z</published>
    <updated>2019-09-18T11:05:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>hexo的一些配置和命令</p><a id="more"></a><h2 id="hexo-常用指令"><a href="#hexo-常用指令" class="headerlink" title="hexo 常用指令"></a>hexo 常用指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"post title with whitespace"</span> // 新增md文章</span><br><span class="line">hexo clean // 清除</span><br><span class="line">hexo g // 生成静态文件。</span><br><span class="line">hexo g -d // 文件生成后立即部署网站</span><br></pre></td></tr></table></figure><h2 id="站内文章跳转"><a href="#站内文章跳转" class="headerlink" title="站内文章跳转"></a>站内文章跳转</h2><p>通过内置的标签插件的语法post_link来实现引用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link 文章文件名（不要后缀） 文章标题（可选） %&#125;</span><br></pre></td></tr></table></figure><h2 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h2><p>请看 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">官网</a></p><h2 id="NexT主题"><a href="#NexT主题" class="headerlink" title="NexT主题"></a>NexT主题</h2><p>使用流行的NexT，<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT官网</a></p><h2 id="默认主题"><a href="#默认主题" class="headerlink" title="默认主题"></a>默认主题</h2><p>插件扩展请看 <a href="https://hans2936.github.io/2017/10/22/PageLog/" target="_blank" rel="noopener">个人网站的功能插件</a></p><h2 id="评论插件-gitalk"><a href="#评论插件-gitalk" class="headerlink" title="评论插件-gitalk"></a>评论插件-gitalk</h2><p><a href="https://jinfagang.github.io/2018/10/07/%E7%BB%88%E4%BA%8E%EF%BC%81%EF%BC%81%EF%BC%81%E8%AE%B0%E5%BD%95%E5%A6%82%E4%BD%95%E5%9C%A8hexo-next%E4%B8%BB%E9%A2%98%E4%B8%8B%E9%85%8D%E7%BD%AEgitalk%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/" target="_blank" rel="noopener">记录如何在hexo next主题下配置gitalk评论系统</a></p><h2 id="修改内容区宽度"><a href="#修改内容区宽度" class="headerlink" title="修改内容区宽度"></a>修改内容区宽度</h2><p><a href="https://zuiyu1818.cn/posts/NexT_codewidth.html" target="_blank" rel="noopener">NexT | 修改内容区域的宽度</a></p><h2 id="添加文章阴影"><a href="#添加文章阴影" class="headerlink" title="添加文章阴影"></a>添加文章阴影</h2><p><a href="https://blog.csdn.net/mqdxiaoxiao/article/details/93797964" target="_blank" rel="noopener">Hexo博客NexT主题下添加文章边框阴影效果</a></p><h2 id="文章摘要设置"><a href="#文章摘要设置" class="headerlink" title="文章摘要设置"></a>文章摘要设置</h2><p><a href="https://blog.csdn.net/lewky_liu/article/details/81277337" target="_blank" rel="noopener">站点首页不显示文章全文</a></p><p>修改配置文件_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Automatically Excerpt. Not recommend.</span></span><br><span class="line"><span class="comment"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></span><br><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure><p><strong><em>注：</em></strong>使用<code>&lt;!-- more --&gt;</code>标志来精确控制文章的摘要预览，通常在文章开头写一下概要。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo的一些配置和命令&lt;/p&gt;
    
    </summary>
    
    
      <category term="建站" scheme="https://JarvanKuo.github.io/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="hexo" scheme="https://JarvanKuo.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>openresty配置</title>
    <link href="https://JarvanKuo.github.io/2019/09/17/openresty%E9%85%8D%E7%BD%AE/"/>
    <id>https://JarvanKuo.github.io/2019/09/17/openresty配置/</id>
    <published>2019-09-17T05:50:09.000Z</published>
    <updated>2019-09-18T11:17:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>openresty配置的一些问题总结！</p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li><p>win10下的linux子系统ubuntu（wsl）</p></li><li><p>openresty版本：ngx_openresty-1.7.7.2.tar.gz</p></li></ul><h2 id="wsl安装"><a href="#wsl安装" class="headerlink" title="wsl安装"></a>wsl安装</h2><p>请移步 <a href="/2019/09/17/wsl笔记/" title="wsl笔记">wsl笔记</a></p><h2 id="openresty安装"><a href="#openresty安装" class="headerlink" title="openresty安装"></a>openresty安装</h2><p>请参考<a href="https://www.iteye.com/blog/jinnianshilongnian-2186270" target="_blank" rel="noopener">安装OpenResty(Nginx+Lua)开发环境</a></p><p>或者参考  <a href="/2019/09/17/openresty安装笔记/" title="openresty安装笔记">openresty安装笔记</a></p><h3 id="openssl版本问题"><a href="#openssl版本问题" class="headerlink" title="openssl版本问题"></a>openssl版本问题</h3><p>需要指定旧版本，推荐在编译 Nginx 时指定 OpenSSL 源码目录，而不是使用系统自带的版本，这样更可控。</p><p>参考<a href="https://imququ.com/post/my-nginx-conf.html" target="_blank" rel="noopener">openssl版本问题</a></p><h3 id="Lua模块安装"><a href="#Lua模块安装" class="headerlink" title="Lua模块安装"></a>Lua模块安装</h3><ol><li><p>安装 LuaRocks </p><p> LuaRocks: Lua 的模块安装和部署工具</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install luarocks</span><br></pre></td></tr></table></figure></li><li><p>安装 luasocket</p><p> lua 远程调试引入的 <code>require(&quot;mobdebug&quot;).start()</code> 需要 socket </p><p> <em>注</em>：Lua 的 Remote Debug 远程调试 现在还搞不定，此处占个坑。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">luarocks install luasocket</span><br></pre></td></tr></table></figure></li></ol><h2 id="openresty使用"><a href="#openresty使用" class="headerlink" title="openresty使用"></a>openresty使用</h2><h3 id="nginx常用命令"><a href="#nginx常用命令" class="headerlink" title="nginx常用命令"></a>nginx常用命令</h3><ol><li><p>启动：</p><p> 指定配置文件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -p `<span class="built_in">pwd</span>`/ -c conf/nginx.conf</span><br></pre></td></tr></table></figure></li><li><p>停止：</p><p> nginx指定配置文件的，停止时也需指定参数</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -p `<span class="built_in">pwd</span>`/ -c conf/nginx.conf -s quit</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;openresty配置的一些问题总结！&lt;/p&gt;
    
    </summary>
    
    
      <category term="分布式" scheme="https://JarvanKuo.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="openresty" scheme="https://JarvanKuo.github.io/tags/openresty/"/>
    
  </entry>
  
  <entry>
    <title>openresty安装笔记</title>
    <link href="https://JarvanKuo.github.io/2019/09/17/openresty%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/"/>
    <id>https://JarvanKuo.github.io/2019/09/17/openresty安装笔记/</id>
    <published>2019-09-17T05:50:09.000Z</published>
    <updated>2019-09-18T11:02:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>openresty安装在ubuntu下的安装</p><a id="more"></a><p>参考 <a href="https://www.iteye.com/blog/jinnianshilongnian-2186270" target="_blank" rel="noopener">安装OpenResty(Nginx+Lua)开发环境</a></p><h2 id="安装步骤："><a href="#安装步骤：" class="headerlink" title="安装步骤："></a>安装步骤：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建目录/usr/servers，以后我们把所有软件安装在此目录</span></span><br><span class="line">mkdir -p /usr/servers  </span><br><span class="line"><span class="built_in">cd</span> /usr/servers/  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">apt-get install libreadline-dev libncurses5-dev libpcre3-dev libssl-dev perl </span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载ngx_openresty-1.7.7.2.tar.gz并解压</span></span><br><span class="line">wget http://openresty.org/download/ngx_openresty-1.7.7.2.tar.gz  </span><br><span class="line">tar -xzvf ngx_openresty-1.7.7.2.tar.gz  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装LuaJIT</span></span><br><span class="line"><span class="built_in">cd</span> /usr/servers/ngx_openresty-1.7.7.2/bundle/LuaJIT-2.1-20150120/  </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 没有安装make的需要先安装</span></span><br><span class="line">    apt install make</span><br><span class="line">    apt install make-guile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 没安装gcc的需要先执行以下命令</span></span><br><span class="line">sudo apt-get  build-dep  gcc </span><br><span class="line"></span><br><span class="line">make clean &amp;&amp; make &amp;&amp; make install  </span><br><span class="line">ln -sf luajit-2.1.0-alpha /usr/<span class="built_in">local</span>/bin/luajit  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载ngx_cache_purge模块，该模块用于清理nginx缓存</span></span><br><span class="line"><span class="built_in">cd</span> /usr/servers/ngx_openresty-1.7.7.2/bundle  </span><br><span class="line">wget https://github.com/FRiCKLE/ngx_cache_purge/archive/2.3.tar.gz  </span><br><span class="line">tar -xvf 2.3.tar.gz  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载nginx_upstream_check_module模块，该模块用于ustream健康检查</span></span><br><span class="line"><span class="built_in">cd</span> /usr/servers/ngx_openresty-1.7.7.2/bundle  </span><br><span class="line">wget https://github.com/yaoweibin/nginx_upstream_check_module/archive/v0.3.0.tar.gz  </span><br><span class="line">tar -xvf v0.3.0.tar.gz   </span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装ngx_openresty</span></span><br><span class="line"><span class="built_in">cd</span> /usr/servers/ngx_openresty-1.7.7.2  </span><br><span class="line">./configure --prefix=/usr/servers --with-http_realip_module  --with-pcre  --with-luajit --add-module=./bundle/ngx_cache_purge-2.3/ --add-module=./bundle/nginx_upstream_check_module-0.3.0/ -j2  </span><br><span class="line"><span class="comment"># 报错 checking for zlib library ... not found，需要安装 zlib</span></span><br><span class="line">sudo apt-get install zlib1g-dev</span><br><span class="line">make &amp;&amp; make install  </span><br><span class="line"><span class="comment"># 报错 recipe for target 'objs/src/event/ngx_event_openssl.o' failed，openssl版本问题，需要安装旧版本</span></span><br><span class="line"><span class="comment"># 需要指定旧版本，推荐在编译 Nginx 时指定 OpenSSL 源码目录，而不是使用系统自带的版本，这样更可控</span></span><br><span class="line"><span class="built_in">cd</span> /usr/servers/ngx_openresty-1.7.7.2/bundle </span><br><span class="line">wget -O openssl.tar.gz -c https://github.com/openssl/openssl/archive/OpenSSL_1_0_2k.tar.gz</span><br><span class="line">tar zxf openssl.tar.gz</span><br><span class="line">mv openssl-OpenSSL_1_0_2k/ openssl</span><br><span class="line"><span class="comment"># 重新配置 ngx_openresty</span></span><br><span class="line"><span class="built_in">cd</span> /usr/servers/ngx_openresty-1.7.7.2</span><br><span class="line">./configure \</span><br><span class="line">--prefix=/usr/servers \</span><br><span class="line">--with-http_realip_module  \</span><br><span class="line">--with-pcre  \</span><br><span class="line">--with-luajit \</span><br><span class="line">--add-module=./bundle/ngx_cache_purge-2.3/ \</span><br><span class="line">--add-module=./bundle/nginx_upstream_check_module-0.3.0/ \</span><br><span class="line">--with-openssl=./bundle/openssl \</span><br><span class="line">-j2  </span><br><span class="line"><span class="comment"># 重新make</span></span><br><span class="line">make &amp;&amp; make install  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动nginx，访问 http://localhost/ 成功即可</span></span><br><span class="line">/usr/servers/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><p><em>拓展：</em></p><ol><li><a href="https://blog.csdn.net/qq_35865125/article/details/80519030" target="_blank" rel="noopener">ubuntu gcc 安装 使用</a></li><li><a href="https://blog.csdn.net/wsclinux/article/details/50494501" target="_blank" rel="noopener">ubantu下安装zlib的方法</a></li><li><a href="https://imququ.com/post/my-nginx-conf.html" target="_blank" rel="noopener">Nginx 配置之完整篇</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;openresty安装在ubuntu下的安装&lt;/p&gt;
    
    </summary>
    
    
      <category term="分布式" scheme="https://JarvanKuo.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="openresty" scheme="https://JarvanKuo.github.io/tags/openresty/"/>
    
  </entry>
  
  <entry>
    <title>nginx配置</title>
    <link href="https://JarvanKuo.github.io/2019/09/17/nginx%E7%AC%94%E8%AE%B0/"/>
    <id>https://JarvanKuo.github.io/2019/09/17/nginx笔记/</id>
    <published>2019-09-17T05:50:09.000Z</published>
    <updated>2019-09-18T11:12:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>nginx的命令，配置！</p><a id="more"></a><h2 id="nginx常用命令"><a href="#nginx常用命令" class="headerlink" title="nginx常用命令"></a>nginx常用命令</h2><ol><li><p>测试配置文件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx  -t</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>启动：</p><p> 指定配置文件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -p `<span class="built_in">pwd</span>`/ -c conf/nginx.conf</span><br></pre></td></tr></table></figure></li><li><p>停止：</p><p> nginx指定配置文件的，停止时也需指定参数</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -p `<span class="built_in">pwd</span>`/ -c conf/nginx.conf -s quit</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;nginx的命令，配置！&lt;/p&gt;
    
    </summary>
    
    
      <category term="分布式" scheme="https://JarvanKuo.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="nginx" scheme="https://JarvanKuo.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>wsl笔记</title>
    <link href="https://JarvanKuo.github.io/2019/09/17/wsl%E7%AC%94%E8%AE%B0/"/>
    <id>https://JarvanKuo.github.io/2019/09/17/wsl笔记/</id>
    <published>2019-09-17T05:50:09.000Z</published>
    <updated>2019-09-19T03:22:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>wsl 下的 ubuntu 系统一些问题总结！</p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>win10 下 wsl 环境安装 ubuntu</p><h2 id="修改更新源"><a href="#修改更新源" class="headerlink" title="修改更新源"></a>修改更新源</h2><ol><li><p>备份文件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list  /etc/apt/sources.list.old</span><br></pre></td></tr></table></figure></li><li><p>使用阿里源</p><p> 打开文件：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> sudo vi /etc/apt/sources.list</span><br><span class="line">`</span><br></pre></td></tr></table></figure><p> 整个文件替换成阿里源：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br></pre></td></tr></table></figure></li><li><p>更新</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure></li></ol><h2 id="设置超级用户"><a href="#设置超级用户" class="headerlink" title="设置超级用户"></a>设置超级用户</h2><p>ubuntu的su初始密码设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd</span><br></pre></td></tr></table></figure><h2 id="zsh美化终端"><a href="#zsh美化终端" class="headerlink" title="zsh美化终端"></a>zsh美化终端</h2><p><a href="https://www.jianshu.com/p/723c2241e8e7" target="_blank" rel="noopener">安装使用oh-my-zsh（Win10+WSL或Ubuntu）</a></p><h3 id="设zsh为默认shell"><a href="#设zsh为默认shell" class="headerlink" title="设zsh为默认shell"></a>设zsh为默认shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh <span class="comment"># 设置 bash 同理</span></span><br></pre></td></tr></table></figure><h3 id="环境变量PATH"><a href="#环境变量PATH" class="headerlink" title="环境变量PATH"></a>环境变量PATH</h3><p>使用zsh后，环境变量需要在 ~/.zshrc 配置文件中定义，/etc/profile 是不会生效的</p><h2 id="开启-ssh-远程连接"><a href="#开启-ssh-远程连接" class="headerlink" title="开启 ssh 远程连接"></a>开启 ssh 远程连接</h2><p>wsl下的ubuntu自带ssh服务有问题需要卸载重装一遍ssh服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重装 openssh-server</span></span><br><span class="line">sudo apt-get remove openssh-server</span><br><span class="line">sudo apt-get install openssh-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 shd_config文件</span></span><br><span class="line">sudo vi /etc/ssh/sshd_config</span><br><span class="line"><span class="comment"># Port 22 #默认即可，如果有端口占用可以自己修改</span></span><br><span class="line"><span class="comment"># PasswordAuthentication yes # 允许用户名密码方式登录</span></span><br><span class="line"><span class="comment"># PermitRootLogin yes # 允许管理员ssh登录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启ssh服务</span></span><br><span class="line">sudo service ssh restart</span><br></pre></td></tr></table></figure><h2 id="apt命令"><a href="#apt命令" class="headerlink" title="apt命令"></a>apt命令</h2><p>[<a href="https://www.cnblogs.com/hk-faith/p/8776471.html" target="_blank" rel="noopener">Ubuntu的apt命令详解</a>]</p><ol><li>搜索软件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo  apt-cache  search  package_name</span><br></pre></td></tr></table></figure><h2 id="windows-和-wsl-互相访问文件"><a href="#windows-和-wsl-互相访问文件" class="headerlink" title="windows 和 wsl 互相访问文件"></a>windows 和 wsl 互相访问文件</h2><ul><li><p>打开wsl文件</p><p>使用explorer.exe，wsl下切换用户就不能使用这个命令。。。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">explorer.exe .</span><br></pre></td></tr></table></figure></li><li><p>访问windows文件，使用挂载方式/mnt/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /mnt/c/Users/Ben/Documents/</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;wsl 下的 ubuntu 系统一些问题总结！&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://JarvanKuo.github.io/categories/linux/"/>
    
    
      <category term="ubuntu" scheme="https://JarvanKuo.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>ant笔记</title>
    <link href="https://JarvanKuo.github.io/2018/09/17/ant%E7%AC%94%E8%AE%B0/"/>
    <id>https://JarvanKuo.github.io/2018/09/17/ant笔记/</id>
    <published>2018-09-17T05:50:09.000Z</published>
    <updated>2019-09-19T07:59:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>ant的使用，命令！</p><a id="more"></a><p>参考文献：</p><p><a href="https://www.jianshu.com/p/cd47031d5771" target="_blank" rel="noopener">ant+maven一键打包springboot上传服务器发布</a></p><p><a href="https://blog.csdn.net/felix_cb/article/details/90643073" target="_blank" rel="noopener">判断linux文件、文件夹是否存在</a></p><p><a href="https://blog.csdn.net/sinat_36521655/article/details/79296181" target="_blank" rel="noopener">shell中脚本参数传递的两种方式</a></p><p><a href="http://smilejay.com/2011/08/unexpected-end-of-file/" target="_blank" rel="noopener">shell脚本“syntax error:unexpected end of file”解决方案</a></p><h2 id="ant远程部署"><a href="#ant远程部署" class="headerlink" title="ant远程部署"></a>ant远程部署</h2><ol><li><p>Ant 引用配置文件</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- set global properties for this build --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">file</span>=<span class="string">"build.properties"</span>/&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!--输出配置信息--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"show_property"</span> <span class="attr">description</span>=<span class="string">"show build.properties conf"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">echo</span>&gt;</span> ================== build.properties ================ <span class="tag">&lt;/<span class="name">echo</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">echo</span>&gt;</span>PROJECT_NAME=$&#123;ant.project.name&#125;<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">echo</span>&gt;</span>DEST_DIR=$&#123;DEST_DIR&#125;<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>target条件控制</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"detect.file"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">condition</span> <span class="attr">property</span>=<span class="string">"fileIsExists"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">and</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">available</span> <span class="attr">file</span>=<span class="string">"c:/123.txt"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">and</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">condition</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"echoDemo"</span> <span class="attr">if</span>=<span class="string">"fileIsExists"</span> <span class="attr">depends</span>=<span class="string">"detect.file"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">echo</span> <span class="attr">message</span>=<span class="string">"hello ant"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>Ant-sshexec-执行远程服务器或本地脚本</p><p> 需要先下载第三方依赖包jsch-0.1.46.jar到ant/lib目录</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sshexec</span> </span></span><br><span class="line"><span class="tag"><span class="attr">host</span>=<span class="string">"$&#123;host&#125;"</span></span></span><br><span class="line"><span class="tag"><span class="attr">username</span>=<span class="string">"$&#123;usr&#125;"</span>   </span></span><br><span class="line"><span class="tag"><span class="attr">password</span>=<span class="string">"$&#123;pwd&#125;"</span></span></span><br><span class="line"><span class="tag"><span class="attr">trust</span>=<span class="string">"true"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">command</span>=<span class="string">"pwd;./test.sh"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">outputproperty</span>=<span class="string">"output"</span> # <span class="attr">sh</span> 的输出，可用 $&#123;<span class="attr">output</span>&#125; 获取</span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>scp命令上传文件</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">scp</span> <span class="attr">todir</span>=<span class="string">"$&#123;USERNAME&#125;:$&#123;PASSWORD&#125;@$&#123;SERVER&#125;:$&#123;DEST_DIR&#125;"</span> <span class="attr">trust</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;LOCAL_PATH&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">name</span>=<span class="string">"build.properties"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">name</span>=<span class="string">"build.xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">name</span>=<span class="string">".idea/"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scp</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>判断远程文件是否存在</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#判断文件是否存在</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">"/data/filename"</span> ];<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"文件存在"</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"文件不存在"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>shell脚本传参</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"脚本<span class="variable">$0</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"第一个参数<span class="variable">$1</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"第二个参数<span class="variable">$2</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令行输入</span></span><br><span class="line">$ ./test.sh 1 2</span><br><span class="line"><span class="comment">#shell中将会输出：</span></span><br><span class="line">脚本./test.sh <span class="comment"># $0获取到的是脚本路径以及脚本名</span></span><br><span class="line"><span class="comment"># 后面按顺序获取参数，当参数超过10个时(包括10个)，需要使用$&#123;10&#125;,$&#123;11&#125;....才能获取到参数</span></span><br><span class="line">第一个参数1</span><br><span class="line">第二个参数2</span><br></pre></td></tr></table></figure></li><li><p>shell脚本添加执行权限</p><p> chmod是权限管理命令change the permissions mode of a file的缩写。。</p><p> u代表所有者，x代表执行权限。 + 表示增加权限。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">chmod u+x file.sh <span class="comment"># 就表示对当前目录下的file.sh文件的所有者增加可执行权限。</span></span><br></pre></td></tr></table></figure></li><li><p>shell脚本“syntax error:unexpected end of file”解决方案</p><p> 原因：该脚本在windows下编辑或者在windows打开保存过。</p><p> DOS下文件和Linux下文件格式差异问题导致的。</p><p> 在 idea 中右下角可以选择 LF 为换行标识。</p><p> 在 服务器可以使用vi修改文件格式，如下：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi dos.txt</span><br><span class="line">:<span class="built_in">set</span> fileformat=unix</span><br><span class="line">:wq</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ant的使用，命令！&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://JarvanKuo.github.io/categories/linux/"/>
    
    
      <category term="ant" scheme="https://JarvanKuo.github.io/tags/ant/"/>
    
  </entry>
  
</feed>
